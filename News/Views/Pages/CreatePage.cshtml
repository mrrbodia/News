@model News.Business.ViewModels.PageDesignModel

@{
    ViewBag.Title = "Create Page";
    Layout = "_Layout.cshtml";
}
<div class="popup-editor">

    <h2>Create Page</h2>

    @using (Html.BeginForm())
    {
        @Html.HiddenFor(m => m.Id)
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary()
            <div class="row">
                <label>Title</label>
                <div class="control mui-textfield">
                    @Html.EditorFor(model => model.Title)
                </div>
            </div>
            <div class="row">
                <label>Url</label>
                <div class="control mui-textfield">
                    @Html.EditorFor(model => model.Url)
                </div>
            </div>
            <div class="row content-block-picker">
                <label>Content Blocks</label>
                <div class="hidden templatehost">
                    <script type="text/html">
                        <select name="ContentBlocks[{number}]">
                            @foreach (var block in Model.ContentBlocksVariants)
                            {
                                <option value="@block.Id">@block.Name</option>
                            }
                        </select>
                    </script>
                </div>
                @{var index = 0;}
                @foreach (var item in Model.ContentBlocks)
                {
                    
                    <div class="control admin-dropdown">
                        @EditorForBlock(index++, item)
                    </div>
                }
                <div class="input-field col s12">
                    @EditorForBlock(Model.ContentBlocks.Count)
                </div>
            </div>

            
            <div class="row">

                <div class="col-md-offset-2 col-md-10">
                    <button class="btn waves-effect cyan waves-light btn-right" type="submit">Cтворити</button>
                </div>
            </div>
        </div>
    }
</div>

@helper EditorForBlock(int number, string id = null)
{
    <select name="ContentBlocks[@number]">
        <option value="" @if (string.IsNullOrWhiteSpace(id)) { <text> selected</text>}></option>
        @foreach (var block in Model.ContentBlocksVariants)
        {
            <option value="@block.Id" @if (!string.IsNullOrWhiteSpace(id) && id.Equals(block.Id.ToString())) { <text> selected</text>}>@block.Name</option>
        }
    </select>
}