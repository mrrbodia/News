@model  News.Business.ViewModels.CommentViewModel
@using Resources
@using (Html.BeginForm("AddComment", "Comment", FormMethod.Post, new { onsubmit = "return confirmCaptcha(document.getElementById('cptchid').value)" }))
{


    <fieldset>
        <h5 class="blue-grey-text">
            <p>@Resources.Resource.leaveComment</p>
        </h5>
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.HiddenFor(m => m.TidingId)
        @Html.HiddenFor(m => m.AuthorId)
        @{
    if (!User.Identity.IsAuthenticated)
    {
        <div class="editor-label">
            @Html.LabelFor(model => model.AuthorName, @Resources.Resource.author)
        </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AuthorName)
                @Html.ValidationMessageFor(model => model.AuthorName)
            </div>
    }
    else
    {
        Model.AuthorName = User.Identity.Name;
    }
        }
        <div class="editor-label">
            @Html.LabelFor(model => model.Text, "Текст повідомлення")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Text)
            @Html.ValidationMessageFor(model => model.Text)
        </div>
        <div id="captcha" class="editor-label">
        </div>
        <p>
            <button class="btn waves-effect waves-light dark-blue-grey left" type="submit">@Resources.Resource.publish</button>
            <button class="btn waves-effect waves-light red  decline-comment" type="reset">@Html.ActionLink(Resources.Resource.decline, "List", "Tidings")</button>
        </p>
    </fieldset>
}